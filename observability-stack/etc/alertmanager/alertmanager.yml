global:
  slackchannel="firefirefire"           #put you data
  slackurl='https://hooks.slack.com/services/<webhook-id>'
  
route:
  group_by: ['alertname']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 1h
  receiver: email_telegram
  routes:
  - receiver: email_telegram
    continue: true
    matchers:
     - severity="critical"
  - receiver: slack
    continue: true
    matchers:
     - severity="critical"   
  - receiver: blackhole
    matchers:
     - alertname="Watchdog"

templates:
  - '/etc/alertmanager/*.tmpl'  
  
receivers:
- name: blackhole
- name: 'slack'
      slack_configs:
          - send_resolved: true
            title: '{{ template "slack.fh.title" . }}'
            pretext: '{{ template "slack.default.pretext" . }}'
            text: '{{ template "slack.default.text" . }}'
            fallback: '{{ template "slack.default.fallback" . }}'
            username: 'Prometheus'
            channel: '${slackchannel}'
            api_url: ${slackurl} 
# - name: 'slack2'
#     slack_configs: # see templates https://github.com/prometheus/alertmanager/blob/master/template/default.tmpl
#       - send_resolved: true
#         #color: '{{ if eq .Status "firing" -}}{{ if eq .CommonLabels.severity "warning" -}}warning{{- else if eq .CommonLabels.severity "critical" -}}danger{{- else -}}#439FE0{{- end -}}{{ else -}}good{{- end }}'
#         #title: '{{ template "slack.default.title" . }}'
#         title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .GroupLabels.SortedPairs.Values | join " " }} {{ if gt (len .CommonLabels) (len .GroupLabels) }}({{ with .CommonLabels.Remove .GroupLabels.Names }}{{ if not (match "id|image|container_label_com_docker_compose.*" .Name) }}{{ .Values | join " " }}{{ end }}){{ end }}{{ end }} '
#         title_link: '{{ template "slack.default.titlelink" . }}'
#         pretext: '{{ .CommonAnnotations.summary }}'
#         text:
#           >-
#           {{ range .Alerts }}
#            *Alert:* {{ .Labels.container_label_host_name }} - {{ .Annotations.summary }} - `{{ .Labels.severity }}`ðŸ“Š
#            *Description:* {{ .Annotations.description }}
#            *Details:*
#            {{ range .Labels.SortedPairs }}{{ if not (match "container_label_com_docker_compose.*" .Name) }} â€¢ *{{ .Name }}:* `{{ .Value }}`
#            {{ end }}{{ end }}
#           {{ end }}
#         username: 'Prometheus'
- name: email_telegram
  # email_configs:
  # - to: 'user@mail.example.com'
  #   from: 'user@mail.example.com'
  #   smarthost: 'smtp.mail.example.com:587'
  #   auth_username: 'username'
  #   auth_identity: 'password'
  #   auth_password: '***'
  telegram_configs:
  - send_resolved: true
    api_url: https://api.telegram.org
    bot_token: '43265423453:AAr3grtbgtr4ttgr3r43et4g'
    chat_id: 3454364564
    message: '{{ template "telegram.default.message" . }}'
    parse_mode: HTML  
# inhibit_rules:
#   - source_match:
#       severity: 'critical'
#     target_match:
#       severity: 'warning'
#     equal: ['alertname', 'dev', 'instance']